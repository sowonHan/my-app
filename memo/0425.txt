요즘 리액트는 함수형을 거의 쓰기 때문에 라이프사이클은 거의 안 쓰고 hook을 주로 쓴다

==== 기본적인 Hooks ====
1. useState - state를 대체
2. useEffect
    라이프사이클 훅을 대체. 렌더링될 때마다 실행된다. (그래서 렌더링될 때마다 뭔가 실행시키고 싶을 때 쓴다)
3. useContext

추가적인 훅
1. useReducer (redux랑 비슷)
    state(데이터)가 많아질수록 useState보다 데이터를 관리하기 용이하다
    더 다양한 컴포넌트에서 상황에 따라 다양한 상태를(?) 다른 값으로 업데이트하고 싶을 때 사용
    기본 데이터가 있고 액션 발생 시 리듀서에 의해서 데이터가 변경
    * 장점 : 컴포넌트 로직을 컴포넌트와 분리시킬 수 있음
2. useMemo, useCallback - 성능 최적화. 불필요한 재렌더링을 막는 것
    useMemo : 렌더링하는 과정에서 특정 값이 바뀔 때만 연산을 실행한다.
    useCallback : 함수를 재사용
3. useRef : ref를 대체 & 로컬 변수로 성능 최적화
    로컬변수 = 렌더링과 상관없이 사용할 수 있는 변수
    ref의 값이 바뀌어도 컴포넌트는 렌더링되지 않음! -> 그래서 렌더링과 관련되지 않은 값을 써야할 때 사용

※ class 컴포넌트는 렌더되면서 유지가 되지만, 함수형 컴포넌트는 렌더될 때 새로 생성되는 경향이 있기 때문에 성능 최적화가 필요하다

Collection of React Hooks 사이트를 이용하면 다른 사람이 만들어놓은 커스텀훅을 사용할 수 있다